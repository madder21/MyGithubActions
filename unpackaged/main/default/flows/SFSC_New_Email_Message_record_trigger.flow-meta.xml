<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>SendEmailToCaseOwner</name>
        <label>SendEmailToCaseOwner</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_Task_Type_according_to_email_message</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>EmailReceipient</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>EmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Email_Recipient_Group</name>
        <label>Assign Email Recipient Group</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>EmailReceipient</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_case_owner_Group.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendEmailToCaseOwner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Email_Recipient_User</name>
        <label>Assign Email Recipient User</label>
        <locationX>314</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>EmailReceipient</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_case_owner_user.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendEmailToCaseOwner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_eMailDirection_To_Outbound</name>
        <label>Set eMailDirection To Outbound</label>
        <locationX>1216</locationX>
        <locationY>1031</locationY>
        <assignmentItems>
            <assignToReference>vareMailDirection</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Outbound</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Task_Type_according_to_email_message</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Var_To_Inbound</name>
        <label>Set eMailDirectionTo Inbound</label>
        <locationX>182</locationX>
        <locationY>839</locationY>
        <assignmentItems>
            <assignToReference>vareMailDirection</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inbound</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Linked_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CurrentCaseStatus</name>
        <label>Current Case Status</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>UpdateCaseStatus</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>üè∑Ô∏è Other Case Status</defaultConnectorLabel>
        <rules>
            <name>CaseIsNew</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Var_To_Inbound</targetReference>
            </connector>
            <label>üÜï Case Is New</label>
        </rules>
        <rules>
            <name>CaseClosed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateClosedCaseStatus</targetReference>
            </connector>
            <label>üí§ Case Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>EmailDirection</name>
        <label>Email Direction</label>
        <locationX>699</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>SMEOrClient</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>üì§ Outgoing</defaultConnectorLabel>
        <rules>
            <name>Incoming2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsSpamEmail</targetReference>
            </connector>
            <label>üì• Incoming</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_case_owner_a_queue</name>
        <label>Is case owner a queue ?</label>
        <locationX>182</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>Get_case_owner_user</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseOwnerGroup</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_case_owner_Group</targetReference>
            </connector>
            <label>Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsEmailMassageWitingForApproval</name>
        <label>IsEmailMassageWitingForApproval</label>
        <locationX>886</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>UpdateCaseStatusClient</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>WaitingForApproval</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TECHIsApproved__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for approval</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>5</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateCaseStatusClient</targetReference>
            </connector>
            <label>WaitingForApproval</label>
        </rules>
        <rules>
            <name>ApprovedAndSent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TECHIsApproved__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for approval</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FirstResponseTime</targetReference>
            </connector>
            <label>ApprovedAndSent</label>
        </rules>
    </decisions>
    <decisions>
        <name>SMEOrClient</name>
        <label>SME Or Client</label>
        <locationX>1216</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Set_eMailDirection_To_Outbound</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Client</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ToSME__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsEmailMassageWitingForApproval</targetReference>
            </connector>
            <label>üë§ Client</label>
        </rules>
        <rules>
            <name>SME</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ToSME__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status_SME</targetReference>
            </connector>
            <label>üë∑ SME</label>
        </rules>
    </decisions>
    <description>Update the case status, and email message information from outbound or inbound email messages.</description>
    <environments>Default</environments>
    <formulas>
        <name>CaseOwnerGroup</name>
        <dataType>String</dataType>
        <expression>LEFT({!Get_Linked_Case.OwnerId},3)</expression>
    </formulas>
    <formulas>
        <name>CaseUrl</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &quot;/services&quot;, {!$Api.Partner_Server_URL_260}))&amp; {!Get_Linked_Case.Id}</expression>
    </formulas>
    <formulas>
        <name>EmailSubject</name>
        <dataType>String</dataType>
        <expression>&quot;New case email notification. Case number &quot; &amp; {!Get_Linked_Case.CaseNumber}</expression>
    </formulas>
    <interviewLabel>SFSC - New Email Message record trigger {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFSC - Record Trigger - AFTER Create Email message - Case update</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_case_owner_Group</name>
        <label>Get case owner Group</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Email_Recipient_Group</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Linked_Case.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_case_owner_user</name>
        <label>Get case owner user</label>
        <locationX>314</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Email_Recipient_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Linked_Case.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Linked_Case</name>
        <label>Get Linked Case</label>
        <locationX>182</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_case_owner_a_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Status_SME</name>
        <label>Update Case Status SME</label>
        <locationX>1282</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Set_eMailDirection_To_Outbound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Waiting for SME</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCaseStatus</name>
        <label>Update Case Status</label>
        <locationX>402</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Set_Var_To_Inbound</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>New email</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New email</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCaseStatusClient</name>
        <label>Update Case Status Client</label>
        <locationX>886</locationX>
        <locationY>839</locationY>
        <connector>
            <targetReference>Set_eMailDirection_To_Outbound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Waiting for Client</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateClosedCaseStatus</name>
        <label>Update Closed Case Status</label>
        <locationX>138</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Set_Var_To_Inbound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New email</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>573</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>EmailDirection</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>FirstResponseTime</name>
        <label>First Response Time</label>
        <locationX>842</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>UpdateCaseStatusClient</targetReference>
        </connector>
        <flowName>SFSC_Case_First_Response</flowName>
        <inputAssignments>
            <name>caseId</name>
            <value>
                <elementReference>caseId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>IsSpamEmail</name>
        <label>Is Spam Email ?</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>CurrentCaseStatus</targetReference>
        </connector>
        <flowName>SFSC_Subflow_Email_Message_Check_Spam_Email</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>caseId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Update_Task_Type_according_to_email_message</name>
        <label>Update Task Type according to email message</label>
        <locationX>699</locationX>
        <locationY>1655</locationY>
        <flowName>SFSC_Update_Task_Type_according_to_email_message</flowName>
        <inputAssignments>
            <name>vareMailDirection</name>
            <value>
                <elementReference>vareMailDirection</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varEmailMessage</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;An email has been received for case  {!Get_Linked_Case.CaseNumber} : {!Get_Linked_Case.Subject}.&lt;/p&gt;&lt;p&gt;Please click the link below to review the new email and respond appropriately.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;{!CaseUrl}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!CaseUrl}&lt;/a&gt;&lt;/p&gt;&lt;p&gt;NOTE: It is not recommended that you forward this email because its association with the original case may be lost.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>caseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Parent.Id</elementReference>
        </value>
    </variables>
    <variables>
        <name>EmailReceipient</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Id</elementReference>
        </value>
    </variables>
    <variables>
        <description>Used for the subflow which will update the related task</description>
        <name>vareMailDirection</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
