<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <decisions>
        <name>Is_an_Email_Field_Populated</name>
        <label>Is an Email Field Populated?</label>
        <locationX>776</locationX>
        <locationY>134</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>varCase.SuppliedEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCase.SuppliedEmail__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCase.CustomerEmail__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Admin_Email_Mapping</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_The_Email_an_Admin</name>
        <label>Is The Email an Admin?</label>
        <locationX>446</locationX>
        <locationY>350</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Admin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Admin_Email_Mapping.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Admin_Queue</targetReference>
            </connector>
            <label>Admin</label>
        </rules>
    </decisions>
    <description>Checks the Admin Case checkbox when the refered email is an admin</description>
    <environments>Default</environments>
    <formulas>
        <name>formCustomerEmail</name>
        <dataType>String</dataType>
        <expression>IF(
         NOT(ISBLANK({!varCase.SuppliedEmail})),
          {!varCase.SuppliedEmail},

        IF(
               NOT(ISBLANK({!varCase.CustomerEmail__c})), 
               {!varCase.CustomerEmail__c},
             
               IF(
                          NOT(ISBLANK({!varCase.SuppliedEmail__c})), 
                           {!varCase.SuppliedEmail__c},
                      
                     
                                  &quot;&quot;
                               )
                         )
                   )</expression>
    </formulas>
    <formulas>
        <name>formEmailDomain</name>
        <dataType>String</dataType>
        <expression>IF(
      ISBLANK({!varCase.SuppliedEmail}),
      IF (
             ISBLANK({!varCase.SuppliedEmail__c}),
            (RIGHT({!varCase.CustomerEmail__c}, LEN({!varCase.CustomerEmail__c}) - FIND(&quot;@&quot;,{!varCase.CustomerEmail__c}) + 1)),
            (RIGHT({!varCase.SuppliedEmail__c}, LEN({!varCase.SuppliedEmail__c}) - FIND(&quot;@&quot;,{!varCase.SuppliedEmail__c}) + 1))
            ),
        (RIGHT({!varCase.SuppliedEmail}, LEN({!varCase.SuppliedEmail}) - FIND(&quot;@&quot;,{!varCase.SuppliedEmail}) + 1))
)</expression>
    </formulas>
    <formulas>
        <description>Based on the Hub, dynamicaly gives the name of the queue to search</description>
        <name>formQueueName</name>
        <dataType>String</dataType>
        <expression>TEXT({!varCase.Hub_Origin__c}) &amp; &#39; - Admin&#39;</expression>
    </formulas>
    <interviewLabel>SFSC - Subflow - Check Admin Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFSC - Subflow - Check Admin Case</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Error</name>
        <label>Error</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <elementReference>FlowErrorMessage</elementReference>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Admin_Email_Mapping</name>
        <label>Get Admin Email Mapping</label>
        <locationX>446</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_The_Email_an_Admin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EmailDomain__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formEmailDomain</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Admin_Email__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Admin_Queue</name>
        <label>Get Admin Queue</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Admin_Case</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>formQueueName</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Admin_Case</name>
        <label>Update Admin Case</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCase.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Admin_Case__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_an_Email_Field_Populated</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>FlowErrorMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$Flow.FaultMessage}</text>
    </textTemplates>
    <variables>
        <name>varCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
