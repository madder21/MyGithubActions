<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Key 2 = SELECT id FROM Account WHERE (Emails OR Phones)</description>
        <name>InvocableAccountApexQuery</name>
        <label>Invocable Account Apex Query</label>
        <locationX>688</locationX>
        <locationY>350</locationY>
        <actionName>SFSC_AccountMatchingQueryInvocable_SVE</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>CountAccountNumber</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>customerEmail</name>
            <value>
                <elementReference>CaseCustomerEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>customerPhone</name>
            <value>
                <elementReference>CaseCustomerPhone</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SFSC_AccountMatchingQueryInvocable_SVE</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Found_client</name>
        <label>Assign Found client</label>
        <locationX>754</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>ClientToMatch</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetAccountFound</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetAccountFound</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CountAccountNumber</name>
        <label>Count Account Number</label>
        <locationX>688</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>AccountNumber</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>InvocableAccountApexQuery</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AcccountDecision</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AcccountDecision</name>
        <label>AcccountDecision</label>
        <locationX>688</locationX>
        <locationY>566</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MultipleAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountNumber</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AccountList</targetReference>
            </connector>
            <label>üîç Multiple Account</label>
        </rules>
        <rules>
            <name>X1_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountNumber</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccountFound</targetReference>
            </connector>
            <label>1 Account</label>
        </rules>
        <rules>
            <name>NoRecords</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountNumber</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NoAccountFoundScreen</targetReference>
            </connector>
            <label>‚ùå No Records</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the Agent select an existing account or want to manually create one</description>
        <name>AccountSelectionResult</name>
        <label>Account Selection Result</label>
        <locationX>182</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>SearchContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>‚úÖ Existing Account Selected</defaultConnectorLabel>
        <rules>
            <name>ManuallyCreateAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ManuallyCreateAnAccount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AccountCreationScreen</targetReference>
            </connector>
            <label>üë§ Manually create Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasAccountId</name>
        <label>Has Account</label>
        <locationX>1073</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCaseInfos.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InvocableAccountApexQuery</targetReference>
            </connector>
            <label>NoAccount</label>
        </rules>
    </decisions>
    <description>Display an account list, on case record, according to customer informations</description>
    <environments>Default</environments>
    <formulas>
        <name>CaseCustomerEmail</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!GetCaseInfos.SuppliedEmail})), {!GetCaseInfos.SuppliedEmail},
IF(NOT(ISBLANK({!GetCaseInfos.CustomerEmail__c})), {!GetCaseInfos.CustomerEmail__c},
IF(NOT(ISBLANK({!GetCaseInfos.SuppliedEmail__c})), {!GetCaseInfos.SuppliedEmail__c},
IF(NOT(ISBLANK({!GetCaseInfos.ContactEmail})), {!GetCaseInfos.ContactEmail},
&quot;&quot;))))</expression>
    </formulas>
    <formulas>
        <name>CaseCustomerPhone</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!GetCaseInfos.SuppliedPhone})), {!GetCaseInfos.SuppliedPhone},
IF(NOT(ISBLANK({!GetCaseInfos.Phone__c})),{!GetCaseInfos.Phone__c} ,
IF(NOT(ISBLANK({!GetCaseInfos.ContactPhone})), {!GetCaseInfos.ContactPhone},
&quot;&quot;
)))</expression>
    </formulas>
    <formulas>
        <description>From Case LastName and FirstName fields</description>
        <name>CaseCustomertName</name>
        <dataType>String</dataType>
        <expression>IF(
  AND(!ISBLANK({!GetCaseInfos.LastName__c}), !ISBLANK({!GetCaseInfos.FirstName__c})),
  {!GetCaseInfos.LastName__c} + &quot; &quot; + {!GetCaseInfos.FirstName__c},
IF(
   AND(!ISBLANK({!GetCaseInfos.LastName__c}), ISBLANK({!GetCaseInfos.FirstName__c})),
   {!GetCaseInfos.LastName__c},
IF(
   AND(ISBLANK({!GetCaseInfos.LastName__c}), !ISBLANK({!GetCaseInfos.FirstName__c})),
   {!GetCaseInfos.FirstName__c},
IF(
   AND(ISBLANK({!GetCaseInfos.LastName__c}), ISBLANK({!GetCaseInfos.FirstName__c})),
  {!GetCaseInfos.SuppliedName},
   &quot;no last name&quot;
   ))))</expression>
    </formulas>
    <formulas>
        <description>From SuppliedName or FirstName__c</description>
        <name>CaseFirstName</name>
        <dataType>String</dataType>
        <expression>IF(
NOT(ISBLANK({!GetCaseInfos.FirstName__c})), 
{!GetCaseInfos.FirstName__c},
LEFT({!GetCaseInfos.SuppliedName},Find(&quot; &quot;, {!GetCaseInfos.SuppliedName})-1)
)</expression>
    </formulas>
    <formulas>
        <name>CaseLastName</name>
        <dataType>String</dataType>
        <expression>IF(
NOT(ISBLANK({!GetCaseInfos.LastName__c})),
{!GetCaseInfos.LastName__c},
RIGHT({!GetCaseInfos.SuppliedName},LEN({!GetCaseInfos.SuppliedName})-Find(&quot; &quot;, {!GetCaseInfos.SuppliedName}))
)</expression>
    </formulas>
    <interviewLabel>SFSC_DisplayAccountListOnCase {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFSC - Screenflow - Display Account List On Case</label>
    <loops>
        <name>GetAccountFound</name>
        <label>GetAccountFound</label>
        <locationX>666</locationX>
        <locationY>674</locationY>
        <collectionReference>InvocableAccountApexQuery</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Found_client</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SearchContactForOneContactFound</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetCaseInfos</name>
        <label>GetCaseInfos</label>
        <locationX>1073</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasAccountId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCaseId.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SearchContact</name>
        <label>SearchContact</label>
        <locationX>314</locationX>
        <locationY>890</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateCaseContactAndAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>EmailAndPhoneAccountListTable.firstSelectedRow.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SearchContactForOneContactFound</name>
        <label>SearchContactForOneContactFound</label>
        <locationX>666</locationX>
        <locationY>974</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Contact_Account_for_One_Account_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ClientToMatch.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Contact_Account_for_One_Account_found</name>
        <label>Update Case Contact &amp; Account for One Account found</label>
        <locationX>666</locationX>
        <locationY>1082</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCaseId.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>ClientToMatch.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>SearchContactForOneContactFound.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCaseContactAndAccount</name>
        <label>Update Case Contact &amp; Account</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCaseId.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>EmailAndPhoneAccountListTable.firstSelectedRow.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>SearchContact.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>AccountList</name>
        <label>Account List</label>
        <locationX>182</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>AccountSelectionResult</targetReference>
        </connector>
        <fields>
            <name>EmailAndPhoneAccountListTable</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Account</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Account Found</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-cbb7&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Client Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Phone&quot;,&quot;guid&quot;:&quot;column-3db4&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Client Phone&quot;,&quot;type&quot;:&quot;phone&quot;},{&quot;apiName&quot;:&quot;PersonEmail&quot;,&quot;guid&quot;:&quot;column-d37c&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Email&quot;,&quot;type&quot;:&quot;email&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>isShowSearchBar</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>InvocableAccountApexQuery</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ManuallyCreateAnAccount</name>
            <dataType>Boolean</dataType>
            <fieldText>Not relevant, i want to create a customer record üë§</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>NoAccountFoundScreen</name>
        <label>NoAccountFoundScreen</label>
        <locationX>930</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CreateAccountMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;‚ö†Ô∏è No Account found ! &lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;‚ö†Ô∏è&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;You should create an account&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>947</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetCaseInfos</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>AccountCreationScreen</name>
        <label>Account Creation Screen</label>
        <locationX>50</locationX>
        <locationY>890</locationY>
        <flowName>SFSC_Create_Person_Account</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>varCaseId.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>AccountNumber</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>AccountNumberFilter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>ApexQueryFields</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Id, Name, LastName, FirstName, PersonEmail, Phone, PersonMobilePhone, Phone2__pc, Phone3__pc, OtherEmail__pc</stringValue>
        </value>
    </variables>
    <variables>
        <name>ClientToMatch</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>currentItem_Filter_1</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>varCaseId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
