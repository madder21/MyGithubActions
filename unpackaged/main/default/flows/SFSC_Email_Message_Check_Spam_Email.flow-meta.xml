<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Set_SPAM_fields_on_Case</name>
        <label>Set SPAM fields on Case</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>Get_Parent_Case.AutoSpam__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Parent_Case.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_SPAM_queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Is_the_Email_Blacklisted</name>
        <label>Is the Email Blacklisted?</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Blocked_Emails.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_SPAM_fields_on_Case</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>On email message incoming, checks if the email is blacklisted, if it is, qualifies the case as SPAM</description>
    <environments>Default</environments>
    <interviewLabel>SFSC - Email Message - Check Spam Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFSC - Record Tigger - AFTER Create Email Message - Check Spam Email</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Log_Error</name>
        <label>Create Log Error</label>
        <locationX>1106</locationX>
        <locationY>539</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <stringValue>Flow - SFSC - Email Message - Check Spam Email - Error on Get Parent Case</stringValue>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Log_Error2</name>
        <label>Create Log Error</label>
        <locationX>842</locationX>
        <locationY>647</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <stringValue>Flow - SFSC - Email Message - Check Spam Email - Error on Get Blocked Emails</stringValue>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Log_Error3</name>
        <label>Create Log Error</label>
        <locationX>314</locationX>
        <locationY>971</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <stringValue>Flow - SFSC - Email Message - Check Spam Email - Error on Update Case</stringValue>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Blocked_Emails</name>
        <label>Get Blocked Emails</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_the_Email_Blacklisted</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Log_Error2</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EmailAddressToBlock__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Parent_Case.SuppliedEmail</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BlockEmailsAddresses__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Parent_Case</name>
        <label>Get Parent Case</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Blocked_Emails</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Log_Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>SuppliedEmail</queriedFields>
        <queriedFields>AutoSpam__c</queriedFields>
        <queriedFields>Contact_reason__c</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>SubType__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_SPAM_queue</name>
        <label>Get SPAM queue</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Parent_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPAM</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <faultConnector>
            <targetReference>Create_Log_Error3</targetReference>
        </faultConnector>
        <inputReference>Get_Parent_Case</inputReference>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_SPAM_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Incoming</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
