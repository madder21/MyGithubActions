<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Key 2 = SELECT id FROM Account WHERE (Emails OR Phones)</description>
        <name>InvocableAccountApexQuery</name>
        <label>Invocable Account Apex Query</label>
        <locationX>710</locationX>
        <locationY>134</locationY>
        <actionName>SFSC_AccountMatchingQueryInvocable_SVE</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Count_Accounts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Fault_Log_01</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customerEmail</name>
            <value>
                <elementReference>clientEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>customerPhone</name>
            <value>
                <elementReference>clientPhone</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SFSC_AccountMatchingQueryInvocable_SVE</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Add_Account_To_Var</name>
        <label>Add Account To Var</label>
        <locationX>138</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>varAccountFound.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Through_Accounts.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Accounts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Counts the number of accounts returned</description>
        <name>Set_Count_Accounts</name>
        <label>Set Count Accounts</label>
        <locationX>710</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>varCountAccounts</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>InvocableAccountApexQuery</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>How_Many_Accounts</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CustomerHasNames</name>
        <label>Customer Has Names ?</label>
        <locationX>710</locationX>
        <locationY>458</locationY>
        <defaultConnectorLabel>❌ Has no Names</defaultConnectorLabel>
        <rules>
            <name>HasNames</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>lastName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_an_Account_in_the_Account_id_Case_field</targetReference>
            </connector>
            <label>✅ Has Names</label>
        </rules>
    </decisions>
    <decisions>
        <name>How_Many_Accounts</name>
        <label>How Many Accounts?</label>
        <locationX>710</locationX>
        <locationY>350</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>One</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCountAccounts</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Accounts</targetReference>
            </connector>
            <label>1️⃣ One</label>
        </rules>
        <rules>
            <name>None</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCountAccounts</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CustomerHasNames</targetReference>
            </connector>
            <label>0️⃣ None</label>
        </rules>
        <rules>
            <name>More_Than_One</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCountAccounts</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <label>#️⃣ More Than One</label>
        </rules>
    </decisions>
    <description>Check for an existing Account with the same Email OR Phone  - Key 2 ( Subflow 2)
IF Not Found
Create a new Account - Subflow 3</description>
    <environments>Default</environments>
    <interviewLabel>Subflow - Check for an existing Account Key 2 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SFSC - Subflow - Check for an existing Account Key 2</label>
    <loops>
        <name>Loop_Through_Accounts</name>
        <label>Loop Through Accounts</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <collectionReference>InvocableAccountApexQuery</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Account_To_Var</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetContactId</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Fault_Log_01</name>
        <label>Create Fault Log 01</label>
        <locationX>1634</locationX>
        <locationY>242</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <stringValue>Error on Sublow - Check for an existing Account Key 2 - Error On &#39;&#39;Get Account&#39;&#39;</stringValue>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Fault_Log_02</name>
        <label>Create Fault Log 02</label>
        <locationX>314</locationX>
        <locationY>974</locationY>
        <inputAssignments>
            <field>Error_Message__c</field>
            <value>
                <stringValue>Error on Subflow - Check for an existing Account Key 2 - Error On &quot;Update Case - Link Account&#39;&#39;</stringValue>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetContactId</name>
        <label>GetContactId</label>
        <locationX>50</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Link_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsPersonAccount</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varAccountFound.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the Account in the Case</description>
        <name>Update_Case_Link_Account</name>
        <label>Update Case - Link Account</label>
        <locationX>50</locationX>
        <locationY>866</locationY>
        <faultConnector>
            <targetReference>Create_Fault_Log_02</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>varAccountFound.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>GetContactId.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>InvocableAccountApexQuery</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>IF Key 1 or Key 2 Not Found
So
An Account will be created with the informations provided by the customer</description>
        <name>Create_an_Account_in_the_Account_id_Case_field</name>
        <label>Create an Account in the Account id Case field</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <flowName>Subflow_Create_an_Account_in_the_Account_id_Case_field</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varFirstName</name>
            <value>
                <elementReference>firstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varLastName</name>
            <value>
                <elementReference>lastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varEmail</name>
            <value>
                <elementReference>clientEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varPhone</name>
            <value>
                <elementReference>clientPhone</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>CaseId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>Gets the formula Email from precedent flow</description>
        <name>clientEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Gets the formula flow from precedent flow</description>
        <name>clientPhone</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>firstName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>lastName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varAccountFound</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>varCountAccounts</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
