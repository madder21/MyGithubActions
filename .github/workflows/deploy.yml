name: Manual Workflow Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Which environment to deploy to
        options:
          - integrate-sandbox
          - uat-partial-sandbox
          - production
        default: 'integrate-sandbox'
        required: true
      validateOnly:
        description: 'Run the deployment as validation only'
        type: boolean
        default: false

jobs:
  pmd-run:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check-outcome.outcome }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install PMD
        run: |
          PMD_VERSION=$(cat pmd/pmd-version.txt)
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
          unzip pmd-bin-$PMD_VERSION.zip -d ~
          mv ~/pmd-bin-$PMD_VERSION ~/pmd
          ~/pmd/bin/run.sh pmd --version

      - name: Run PMD scan and fail on violations
        id: pmd-scan
        run: |
          mkdir -p reports
          ~/pmd/bin/run.sh pmd -d ./force-app/main/default/classes -R pmd/pmd-ruleset.xml -f text > reports/pmd-results.txt

          echo "---- PMD OUTPUT ----"
          cat reports/pmd-results.txt

          # Check if the file is non-empty (indicating violations)
          if [ -s reports/pmd-results.txt ]; then
            echo "PMD violations found!"
            exit 1
          else
            echo "No PMD violations."
          fi

      - name: Upload PMD report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: reports/pmd-results.txt

  deploy-prod-jwt:
    needs: pmd-run
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'integrate-sandbox' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node (optional)
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      - name: Create JWT key file
        run: |
          mkdir -p JWT
          echo "${{ secrets.SFDC_AUTH_KEY }}" > JWT/server.key
          chmod 600 JWT/server.key

      - name: Deploy via JWT to Sandbox
        uses: ./.github/actions/deploy-environment
        with:
          instanceUrl: https://login.salesforce.com
          clientId: ${{ secrets.SFDX_INT_CLIENT_ID }}
          username: ulrich.m.ndong.ngomo@empathetic-impala-4d2hgs.com
          keyFilePath: JWT/server.key
          alias: aliasTestCICDOrg
          manifestPath: manifest/package.xml
          testsToRunFile: specifiedTestsClass/testsToRun.txt
          validateOnly: ${{ github.event.inputs.validateOnly }}
